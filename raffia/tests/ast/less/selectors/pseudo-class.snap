---
source: raffia/tests/ast.rs
---
Stylesheet(
  type: "Stylesheet",
  statements: [
    QualifiedRule(
      type: "QualifiedRule",
      selector: SelectorList(
        type: "SelectorList",
        selectors: [
          ComplexSelector(
            type: "ComplexSelector",
            children: [
              CompoundSelector(
                type: "CompoundSelector",
                children: [
                  PseudoClassSelector(
                    type: "PseudoClassSelector",
                    name: Ident(
                      type: "Ident",
                      name: "nth-child",
                      raw: "nth-child",
                      span: Span(
                        start: 1,
                        end: 10,
                      ),
                    ),
                    arg: Some(TokenSeq(
                      type: "TokenSeq",
                      tokens: [
                        TokenWithSpan(
                          type: "TokenWithSpan",
                          token: AtLBraceVar(AtLBraceVar(
                            kind: "AtLBraceVar",
                            ident: Ident(
                              kind: "Ident",
                              escaped: false,
                              raw: "i",
                            ),
                          )),
                          span: Span(
                            start: 11,
                            end: 15,
                          ),
                        ),
                      ],
                      span: Span(
                        start: 11,
                        end: 15,
                      ),
                    )),
                    span: Span(
                      start: 0,
                      end: 16,
                    ),
                  ),
                ],
                span: Span(
                  start: 0,
                  end: 16,
                ),
              ),
            ],
            span: Span(
              start: 0,
              end: 16,
            ),
          ),
        ],
        commaSpans: [],
        span: Span(
          start: 0,
          end: 16,
        ),
      ),
      block: SimpleBlock(
        type: "SimpleBlock",
        statements: [],
        span: Span(
          start: 17,
          end: 19,
        ),
      ),
      span: Span(
        start: 0,
        end: 19,
      ),
    ),
    QualifiedRule(
      type: "QualifiedRule",
      selector: SelectorList(
        type: "SelectorList",
        selectors: [
          ComplexSelector(
            type: "ComplexSelector",
            children: [
              CompoundSelector(
                type: "CompoundSelector",
                children: [
                  PseudoClassSelector(
                    type: "PseudoClassSelector",
                    name: Ident(
                      type: "Ident",
                      name: "nth-of-type",
                      raw: "nth-of-type",
                      span: Span(
                        start: 21,
                        end: 32,
                      ),
                    ),
                    arg: Some(TokenSeq(
                      type: "TokenSeq",
                      tokens: [
                        TokenWithSpan(
                          type: "TokenWithSpan",
                          token: AtLBraceVar(AtLBraceVar(
                            kind: "AtLBraceVar",
                            ident: Ident(
                              kind: "Ident",
                              escaped: false,
                              raw: "i",
                            ),
                          )),
                          span: Span(
                            start: 33,
                            end: 37,
                          ),
                        ),
                      ],
                      span: Span(
                        start: 33,
                        end: 37,
                      ),
                    )),
                    span: Span(
                      start: 20,
                      end: 38,
                    ),
                  ),
                ],
                span: Span(
                  start: 20,
                  end: 38,
                ),
              ),
            ],
            span: Span(
              start: 20,
              end: 38,
            ),
          ),
        ],
        commaSpans: [],
        span: Span(
          start: 20,
          end: 38,
        ),
      ),
      block: SimpleBlock(
        type: "SimpleBlock",
        statements: [],
        span: Span(
          start: 39,
          end: 41,
        ),
      ),
      span: Span(
        start: 20,
        end: 41,
      ),
    ),
  ],
  span: Span(
    start: 0,
    end: 42,
  ),
)
