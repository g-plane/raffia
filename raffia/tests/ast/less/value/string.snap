---
source: raffia/tests/ast.rs
assertion_line: 54
---
Stylesheet(
  type: "Stylesheet",
  statements: [
    QualifiedRule(
      type: "QualifiedRule",
      selector: SelectorList(
        type: "SelectorList",
        selectors: [
          ComplexSelector(
            type: "ComplexSelector",
            children: [
              CompoundSelector(
                type: "CompoundSelector",
                children: [
                  IdSelector(
                    type: "IdSelector",
                    name: Ident(
                      type: "Ident",
                      name: "escaped",
                      raw: "escaped",
                      span: Span(
                        start: 1,
                        end: 8,
                      ),
                    ),
                    span: Span(
                      start: 0,
                      end: 8,
                    ),
                  ),
                ],
                span: Span(
                  start: 0,
                  end: 8,
                ),
              ),
            ],
            span: Span(
              start: 0,
              end: 8,
            ),
          ),
        ],
        commaSpans: [],
        span: Span(
          start: 0,
          end: 8,
        ),
      ),
      block: SimpleBlock(
        type: "SimpleBlock",
        statements: [
          Declaration(
            type: "Declaration",
            name: Ident(
              type: "Ident",
              name: "filter",
              raw: "filter",
              span: Span(
                start: 13,
                end: 19,
              ),
            ),
            colonSpan: Span(
              start: 19,
              end: 20,
            ),
            value: [
              LessEscapedStr(
                type: "LessEscapedStr",
                str: Str(
                  type: "Str",
                  value: "DX.Transform.MS.BS.filter(opacity=50)",
                  raw: "\"DX.Transform.MS.BS.filter(opacity=50)\"",
                  span: Span(
                    start: 22,
                    end: 61,
                  ),
                ),
                span: Span(
                  start: 21,
                  end: 61,
                ),
              ),
            ],
            important: None,
            lessPropertyMerge: None,
            span: Span(
              start: 13,
              end: 61,
            ),
          ),
        ],
        span: Span(
          start: 9,
          end: 64,
        ),
      ),
      span: Span(
        start: 0,
        end: 64,
      ),
    ),
    QualifiedRule(
      type: "QualifiedRule",
      selector: SelectorList(
        type: "SelectorList",
        selectors: [
          ComplexSelector(
            type: "ComplexSelector",
            children: [
              CompoundSelector(
                type: "CompoundSelector",
                children: [
                  IdSelector(
                    type: "IdSelector",
                    name: Ident(
                      type: "Ident",
                      name: "crazy",
                      raw: "crazy",
                      span: Span(
                        start: 67,
                        end: 72,
                      ),
                    ),
                    span: Span(
                      start: 66,
                      end: 72,
                    ),
                  ),
                ],
                span: Span(
                  start: 66,
                  end: 72,
                ),
              ),
            ],
            span: Span(
              start: 66,
              end: 72,
            ),
          ),
        ],
        commaSpans: [],
        span: Span(
          start: 66,
          end: 72,
        ),
      ),
      block: SimpleBlock(
        type: "SimpleBlock",
        statements: [
          Declaration(
            type: "Declaration",
            name: Ident(
              type: "Ident",
              name: "image",
              raw: "image",
              span: Span(
                start: 75,
                end: 80,
              ),
            ),
            colonSpan: Span(
              start: 80,
              end: 81,
            ),
            value: [
              Url(
                type: "Url",
                name: Ident(
                  type: "Ident",
                  name: "url",
                  raw: "url",
                  span: Span(
                    start: 82,
                    end: 85,
                  ),
                ),
                value: Some(UrlRaw(
                  type: "UrlRaw",
                  value: "http://",
                  raw: "http://",
                  span: Span(
                    start: 86,
                    end: 93,
                  ),
                )),
                modifiers: [],
                span: Span(
                  start: 82,
                  end: 94,
                ),
              ),
              Delimiter(
                type: "Delimiter",
                kind: Comma,
                span: Span(
                  start: 94,
                  end: 95,
                ),
              ),
              Str(
                type: "Str",
                value: "}",
                raw: "\"}\"",
                span: Span(
                  start: 96,
                  end: 99,
                ),
              ),
              Delimiter(
                type: "Delimiter",
                kind: Comma,
                span: Span(
                  start: 99,
                  end: 100,
                ),
              ),
              Url(
                type: "Url",
                name: Ident(
                  type: "Ident",
                  name: "url",
                  raw: "url",
                  span: Span(
                    start: 101,
                    end: 104,
                  ),
                ),
                value: Some(Str(
                  type: "Str",
                  value: "http://}",
                  raw: "\"http://}\"",
                  span: Span(
                    start: 105,
                    end: 115,
                  ),
                )),
                modifiers: [],
                span: Span(
                  start: 101,
                  end: 116,
                ),
              ),
            ],
            important: None,
            lessPropertyMerge: None,
            span: Span(
              start: 75,
              end: 116,
            ),
          ),
        ],
        span: Span(
          start: 73,
          end: 118,
        ),
      ),
      span: Span(
        start: 66,
        end: 118,
      ),
    ),
    LessMixinDefinition(
      type: "LessMixinDefinition",
      name: ClassSelector(
        type: "ClassSelector",
        name: Ident(
          type: "Ident",
          name: "mix-mul",
          raw: "mix-mul",
          span: Span(
            start: 121,
            end: 128,
          ),
        ),
        span: Span(
          start: 120,
          end: 128,
        ),
      ),
      params: LessMixinParameters(
        type: "LessMixinParameters",
        params: [
          LessMixinNamedParameter(
            type: "LessMixinNamedParameter",
            name: LessVariable(
              type: "LessVariable",
              name: Ident(
                type: "Ident",
                name: "a",
                raw: "a",
                span: Span(
                  start: 131,
                  end: 132,
                ),
              ),
              span: Span(
                start: 130,
                end: 132,
              ),
            ),
            value: Some(LessMixinNamedParameterDefaultValue(
              type: "LessMixinNamedParameterDefaultValue",
              colonSpan: Span(
                start: 132,
                end: 133,
              ),
              value: Ident(
                type: "Ident",
                name: "green",
                raw: "green",
                span: Span(
                  start: 134,
                  end: 139,
                ),
              ),
              span: Span(
                start: 132,
                end: 139,
              ),
            )),
            span: Span(
              start: 130,
              end: 139,
            ),
          ),
        ],
        isCommaSeparated: true,
        separatorSpans: [],
        span: Span(
          start: 129,
          end: 140,
        ),
      ),
      guard: None,
      block: SimpleBlock(
        type: "SimpleBlock",
        statements: [
          Declaration(
            type: "Declaration",
            name: Ident(
              type: "Ident",
              name: "color",
              raw: "color",
              span: Span(
                start: 145,
                end: 150,
              ),
            ),
            colonSpan: Span(
              start: 150,
              end: 151,
            ),
            value: [
              LessEscapedStr(
                type: "LessEscapedStr",
                str: Str(
                  type: "Str",
                  value: "@{a}",
                  raw: "\"@{a}\"",
                  span: Span(
                    start: 153,
                    end: 159,
                  ),
                ),
                span: Span(
                  start: 152,
                  end: 159,
                ),
              ),
            ],
            important: None,
            lessPropertyMerge: None,
            span: Span(
              start: 145,
              end: 159,
            ),
          ),
        ],
        span: Span(
          start: 141,
          end: 162,
        ),
      ),
      span: Span(
        start: 120,
        end: 162,
      ),
    ),
  ],
  span: Span(
    start: 0,
    end: 163,
  ),
)
