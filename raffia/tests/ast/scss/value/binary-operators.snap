---
source: raffia/tests/ast.rs
---
Stylesheet(
  type: "Stylesheet",
  statements: [
    QualifiedRule(
      type: "QualifiedRule",
      selector: SelectorList(
        type: "SelectorList",
        selectors: [
          ComplexSelector(
            type: "ComplexSelector",
            children: [
              CompoundSelector(
                type: "CompoundSelector",
                children: [
                  TagNameSelector(
                    type: "TagNameSelector",
                    name: WqName(
                      type: "WqName",
                      name: Ident(
                        type: "Ident",
                        name: "a",
                        raw: "a",
                        span: Span(
                          start: 0,
                          end: 1,
                        ),
                      ),
                      prefix: None,
                      span: Span(
                        start: 0,
                        end: 1,
                      ),
                    ),
                    span: Span(
                      start: 0,
                      end: 1,
                    ),
                  ),
                ],
                span: Span(
                  start: 0,
                  end: 1,
                ),
              ),
            ],
            span: Span(
              start: 0,
              end: 1,
            ),
          ),
        ],
        span: Span(
          start: 0,
          end: 1,
        ),
      ),
      block: SimpleBlock(
        type: "SimpleBlock",
        statements: [
          Declaration(
            type: "Declaration",
            name: Ident(
              type: "Ident",
              name: "b",
              raw: "b",
              span: Span(
                start: 6,
                end: 7,
              ),
            ),
            value: [
              SassBinaryExpression(
                type: "SassBinaryExpression",
                left: Number(
                  type: "Number",
                  value: 1.2,
                  raw: "1.2",
                  span: Span(
                    start: 9,
                    end: 12,
                  ),
                ),
                op: SassBinaryOperator(
                  type: "SassBinaryOperator",
                  kind: Modulo,
                  span: Span(
                    start: 13,
                    end: 14,
                  ),
                ),
                right: Number(
                  type: "Number",
                  value: 4.7,
                  raw: "4.7",
                  span: Span(
                    start: 15,
                    end: 18,
                  ),
                ),
                span: Span(
                  start: 9,
                  end: 18,
                ),
              ),
            ],
            important: None,
            lessPropertyMerge: None,
            span: Span(
              start: 6,
              end: 18,
            ),
          ),
        ],
        span: Span(
          start: 2,
          end: 21,
        ),
      ),
      span: Span(
        start: 0,
        end: 21,
      ),
    ),
    QualifiedRule(
      type: "QualifiedRule",
      selector: SelectorList(
        type: "SelectorList",
        selectors: [
          ComplexSelector(
            type: "ComplexSelector",
            children: [
              CompoundSelector(
                type: "CompoundSelector",
                children: [
                  TagNameSelector(
                    type: "TagNameSelector",
                    name: WqName(
                      type: "WqName",
                      name: Ident(
                        type: "Ident",
                        name: "div",
                        raw: "div",
                        span: Span(
                          start: 23,
                          end: 26,
                        ),
                      ),
                      prefix: None,
                      span: Span(
                        start: 23,
                        end: 26,
                      ),
                    ),
                    span: Span(
                      start: 23,
                      end: 26,
                    ),
                  ),
                ],
                span: Span(
                  start: 23,
                  end: 26,
                ),
              ),
            ],
            span: Span(
              start: 23,
              end: 26,
            ),
          ),
        ],
        span: Span(
          start: 23,
          end: 26,
        ),
      ),
      block: SimpleBlock(
        type: "SimpleBlock",
        statements: [
          Declaration(
            type: "Declaration",
            name: Ident(
              type: "Ident",
              name: "a",
              raw: "a",
              span: Span(
                start: 31,
                end: 32,
              ),
            ),
            value: [
              SassParenthesizedExpression(
                type: "SassParenthesizedExpression",
                expr: SassBinaryExpression(
                  type: "SassBinaryExpression",
                  left: Ident(
                    type: "Ident",
                    name: "false",
                    raw: "false",
                    span: Span(
                      start: 35,
                      end: 40,
                    ),
                  ),
                  op: SassBinaryOperator(
                    type: "SassBinaryOperator",
                    kind: And,
                    span: Span(
                      start: 41,
                      end: 44,
                    ),
                  ),
                  right: Str(
                    type: "Str",
                    value: "hey",
                    raw: "\"hey\"",
                    span: Span(
                      start: 45,
                      end: 50,
                    ),
                  ),
                  span: Span(
                    start: 35,
                    end: 50,
                  ),
                ),
                span: Span(
                  start: 34,
                  end: 51,
                ),
              ),
            ],
            important: None,
            lessPropertyMerge: None,
            span: Span(
              start: 31,
              end: 51,
            ),
          ),
          Declaration(
            type: "Declaration",
            name: Ident(
              type: "Ident",
              name: "b",
              raw: "b",
              span: Span(
                start: 55,
                end: 56,
              ),
            ),
            value: [
              SassParenthesizedExpression(
                type: "SassParenthesizedExpression",
                expr: SassBinaryExpression(
                  type: "SassBinaryExpression",
                  left: Str(
                    type: "Str",
                    value: "hey",
                    raw: "\"hey\"",
                    span: Span(
                      start: 59,
                      end: 64,
                    ),
                  ),
                  op: SassBinaryOperator(
                    type: "SassBinaryOperator",
                    kind: And,
                    span: Span(
                      start: 65,
                      end: 68,
                    ),
                  ),
                  right: Str(
                    type: "Str",
                    value: "ho",
                    raw: "\"ho\"",
                    span: Span(
                      start: 69,
                      end: 73,
                    ),
                  ),
                  span: Span(
                    start: 59,
                    end: 73,
                  ),
                ),
                span: Span(
                  start: 58,
                  end: 74,
                ),
              ),
            ],
            important: None,
            lessPropertyMerge: None,
            span: Span(
              start: 55,
              end: 74,
            ),
          ),
          Declaration(
            type: "Declaration",
            name: Ident(
              type: "Ident",
              name: "b",
              raw: "b",
              span: Span(
                start: 78,
                end: 79,
              ),
            ),
            value: [
              SassParenthesizedExpression(
                type: "SassParenthesizedExpression",
                expr: SassBinaryExpression(
                  type: "SassBinaryExpression",
                  left: Str(
                    type: "Str",
                    value: "hey",
                    raw: "\"hey\"",
                    span: Span(
                      start: 82,
                      end: 87,
                    ),
                  ),
                  op: SassBinaryOperator(
                    type: "SassBinaryOperator",
                    kind: Or,
                    span: Span(
                      start: 88,
                      end: 90,
                    ),
                  ),
                  right: Str(
                    type: "Str",
                    value: "ho",
                    raw: "\"ho\"",
                    span: Span(
                      start: 91,
                      end: 95,
                    ),
                  ),
                  span: Span(
                    start: 82,
                    end: 95,
                  ),
                ),
                span: Span(
                  start: 81,
                  end: 96,
                ),
              ),
            ],
            important: None,
            lessPropertyMerge: None,
            span: Span(
              start: 78,
              end: 96,
            ),
          ),
          Declaration(
            type: "Declaration",
            name: Ident(
              type: "Ident",
              name: "a",
              raw: "a",
              span: Span(
                start: 100,
                end: 101,
              ),
            ),
            value: [
              SassBinaryExpression(
                type: "SassBinaryExpression",
                left: Ident(
                  type: "Ident",
                  name: "false",
                  raw: "false",
                  span: Span(
                    start: 103,
                    end: 108,
                  ),
                ),
                op: SassBinaryOperator(
                  type: "SassBinaryOperator",
                  kind: And,
                  span: Span(
                    start: 109,
                    end: 112,
                  ),
                ),
                right: Str(
                  type: "Str",
                  value: "hey",
                  raw: "\"hey\"",
                  span: Span(
                    start: 113,
                    end: 118,
                  ),
                ),
                span: Span(
                  start: 103,
                  end: 118,
                ),
              ),
            ],
            important: None,
            lessPropertyMerge: None,
            span: Span(
              start: 100,
              end: 118,
            ),
          ),
          Declaration(
            type: "Declaration",
            name: Ident(
              type: "Ident",
              name: "b",
              raw: "b",
              span: Span(
                start: 122,
                end: 123,
              ),
            ),
            value: [
              SassBinaryExpression(
                type: "SassBinaryExpression",
                left: Str(
                  type: "Str",
                  value: "hey",
                  raw: "\"hey\"",
                  span: Span(
                    start: 125,
                    end: 130,
                  ),
                ),
                op: SassBinaryOperator(
                  type: "SassBinaryOperator",
                  kind: And,
                  span: Span(
                    start: 131,
                    end: 134,
                  ),
                ),
                right: Str(
                  type: "Str",
                  value: "ho",
                  raw: "\"ho\"",
                  span: Span(
                    start: 135,
                    end: 139,
                  ),
                ),
                span: Span(
                  start: 125,
                  end: 139,
                ),
              ),
            ],
            important: None,
            lessPropertyMerge: None,
            span: Span(
              start: 122,
              end: 139,
            ),
          ),
        ],
        span: Span(
          start: 27,
          end: 142,
        ),
      ),
      span: Span(
        start: 23,
        end: 142,
      ),
    ),
    QualifiedRule(
      type: "QualifiedRule",
      selector: SelectorList(
        type: "SelectorList",
        selectors: [
          ComplexSelector(
            type: "ComplexSelector",
            children: [
              CompoundSelector(
                type: "CompoundSelector",
                children: [
                  ClassSelector(
                    type: "ClassSelector",
                    name: Ident(
                      type: "Ident",
                      name: "division",
                      raw: "division",
                      span: Span(
                        start: 145,
                        end: 153,
                      ),
                    ),
                    span: Span(
                      start: 144,
                      end: 153,
                    ),
                  ),
                ],
                span: Span(
                  start: 144,
                  end: 153,
                ),
              ),
            ],
            span: Span(
              start: 144,
              end: 153,
            ),
          ),
        ],
        span: Span(
          start: 144,
          end: 153,
        ),
      ),
      block: SimpleBlock(
        type: "SimpleBlock",
        statements: [
          SassVariableDeclaration(
            type: "SassVariableDeclaration",
            namespace: None,
            name: SassVariable(
              type: "SassVariable",
              name: Ident(
                type: "Ident",
                name: "var",
                raw: "var",
                span: Span(
                  start: 159,
                  end: 162,
                ),
              ),
              span: Span(
                start: 158,
                end: 162,
              ),
            ),
            value: SassBinaryExpression(
              type: "SassBinaryExpression",
              left: Ident(
                type: "Ident",
                name: "a",
                raw: "a",
                span: Span(
                  start: 164,
                  end: 165,
                ),
              ),
              op: SassBinaryOperator(
                type: "SassBinaryOperator",
                kind: Division,
                span: Span(
                  start: 166,
                  end: 167,
                ),
              ),
              right: Ident(
                type: "Ident",
                name: "b",
                raw: "b",
                span: Span(
                  start: 168,
                  end: 169,
                ),
              ),
              span: Span(
                start: 164,
                end: 169,
              ),
            ),
            overridable: false,
            forceGlobal: false,
            span: Span(
              start: 158,
              end: 170,
            ),
          ),
          Declaration(
            type: "Declaration",
            name: Ident(
              type: "Ident",
              name: "decl",
              raw: "decl",
              span: Span(
                start: 185,
                end: 189,
              ),
            ),
            value: [
              Ident(
                type: "Ident",
                name: "a",
                raw: "a",
                span: Span(
                  start: 191,
                  end: 192,
                ),
              ),
              Delimiter(
                type: "Delimiter",
                kind: Solidus,
                span: Span(
                  start: 193,
                  end: 194,
                ),
              ),
              Ident(
                type: "Ident",
                name: "b",
                raw: "b",
                span: Span(
                  start: 195,
                  end: 196,
                ),
              ),
            ],
            important: None,
            lessPropertyMerge: None,
            span: Span(
              start: 185,
              end: 196,
            ),
          ),
          Declaration(
            type: "Declaration",
            name: Ident(
              type: "Ident",
              name: "with-parens",
              raw: "with-parens",
              span: Span(
                start: 216,
                end: 227,
              ),
            ),
            value: [
              SassParenthesizedExpression(
                type: "SassParenthesizedExpression",
                expr: SassBinaryExpression(
                  type: "SassBinaryExpression",
                  left: Ident(
                    type: "Ident",
                    name: "a",
                    raw: "a",
                    span: Span(
                      start: 230,
                      end: 231,
                    ),
                  ),
                  op: SassBinaryOperator(
                    type: "SassBinaryOperator",
                    kind: Division,
                    span: Span(
                      start: 232,
                      end: 233,
                    ),
                  ),
                  right: Ident(
                    type: "Ident",
                    name: "b",
                    raw: "b",
                    span: Span(
                      start: 234,
                      end: 235,
                    ),
                  ),
                  span: Span(
                    start: 230,
                    end: 235,
                  ),
                ),
                span: Span(
                  start: 229,
                  end: 236,
                ),
              ),
            ],
            important: None,
            lessPropertyMerge: None,
            span: Span(
              start: 216,
              end: 236,
            ),
          ),
        ],
        span: Span(
          start: 154,
          end: 251,
        ),
      ),
      span: Span(
        start: 144,
        end: 251,
      ),
    ),
    SassFunctionAtRule(
      type: "SassFunctionAtRule",
      name: Ident(
        type: "Ident",
        name: "f",
        raw: "f",
        span: Span(
          start: 263,
          end: 264,
        ),
      ),
      parameters: [],
      arbitraryParameter: None,
      body: SimpleBlock(
        type: "SimpleBlock",
        statements: [
          SassReturnAtRule(
            type: "SassReturnAtRule",
            expr: SassBinaryExpression(
              type: "SassBinaryExpression",
              left: Ident(
                type: "Ident",
                name: "a",
                raw: "a",
                span: Span(
                  start: 279,
                  end: 280,
                ),
              ),
              op: SassBinaryOperator(
                type: "SassBinaryOperator",
                kind: Division,
                span: Span(
                  start: 281,
                  end: 282,
                ),
              ),
              right: Ident(
                type: "Ident",
                name: "b",
                raw: "b",
                span: Span(
                  start: 283,
                  end: 284,
                ),
              ),
              span: Span(
                start: 279,
                end: 284,
              ),
            ),
            span: Span(
              start: 271,
              end: 284,
            ),
          ),
        ],
        span: Span(
          start: 267,
          end: 299,
        ),
      ),
      span: Span(
        start: 253,
        end: 299,
      ),
    ),
    SassDebugAtRule(
      type: "SassDebugAtRule",
      expr: SassList(
        type: "SassList",
        items: [
          Length(
            type: "Length",
            value: Number(
              type: "Number",
              value: 15.0,
              raw: "15",
              span: Span(
                start: 307,
                end: 309,
              ),
            ),
            unit: Ident(
              type: "Ident",
              name: "px",
              raw: "px",
              span: Span(
                start: 309,
                end: 311,
              ),
            ),
            span: Span(
              start: 307,
              end: 311,
            ),
          ),
          Delimiter(
            type: "Delimiter",
            kind: Solidus,
            span: Span(
              start: 312,
              end: 313,
            ),
          ),
          Length(
            type: "Length",
            value: Number(
              type: "Number",
              value: 30.0,
              raw: "30",
              span: Span(
                start: 314,
                end: 316,
              ),
            ),
            unit: Ident(
              type: "Ident",
              name: "px",
              raw: "px",
              span: Span(
                start: 316,
                end: 318,
              ),
            ),
            span: Span(
              start: 314,
              end: 318,
            ),
          ),
        ],
        separator: Space,
        span: Span(
          start: 307,
          end: 318,
        ),
      ),
      span: Span(
        start: 300,
        end: 318,
      ),
    ),
    QualifiedRule(
      type: "QualifiedRule",
      selector: SelectorList(
        type: "SelectorList",
        selectors: [
          ComplexSelector(
            type: "ComplexSelector",
            children: [
              CompoundSelector(
                type: "CompoundSelector",
                children: [
                  TagNameSelector(
                    type: "TagNameSelector",
                    name: WqName(
                      type: "WqName",
                      name: Ident(
                        type: "Ident",
                        name: "a",
                        raw: "a",
                        span: Span(
                          start: 337,
                          end: 338,
                        ),
                      ),
                      prefix: None,
                      span: Span(
                        start: 337,
                        end: 338,
                      ),
                    ),
                    span: Span(
                      start: 337,
                      end: 338,
                    ),
                  ),
                ],
                span: Span(
                  start: 337,
                  end: 338,
                ),
              ),
            ],
            span: Span(
              start: 337,
              end: 338,
            ),
          ),
        ],
        span: Span(
          start: 337,
          end: 338,
        ),
      ),
      block: SimpleBlock(
        type: "SimpleBlock",
        statements: [
          Declaration(
            type: "Declaration",
            name: Ident(
              type: "Ident",
              name: "prop",
              raw: "prop",
              span: Span(
                start: 343,
                end: 347,
              ),
            ),
            value: [
              Ident(
                type: "Ident",
                name: "a",
                raw: "a",
                span: Span(
                  start: 349,
                  end: 350,
                ),
              ),
              Delimiter(
                type: "Delimiter",
                kind: Comma,
                span: Span(
                  start: 350,
                  end: 351,
                ),
              ),
              SassBinaryExpression(
                type: "SassBinaryExpression",
                left: Number(
                  type: "Number",
                  value: -1.0,
                  raw: "-1",
                  span: Span(
                    start: 351,
                    end: 353,
                  ),
                ),
                op: SassBinaryOperator(
                  type: "SassBinaryOperator",
                  kind: Multiply,
                  span: Span(
                    start: 353,
                    end: 354,
                  ),
                ),
                right: Ident(
                  type: "Ident",
                  name: "b",
                  raw: "b",
                  span: Span(
                    start: 354,
                    end: 355,
                  ),
                ),
                span: Span(
                  start: 351,
                  end: 355,
                ),
              ),
            ],
            important: None,
            lessPropertyMerge: None,
            span: Span(
              start: 343,
              end: 355,
            ),
          ),
        ],
        span: Span(
          start: 339,
          end: 358,
        ),
      ),
      span: Span(
        start: 337,
        end: 358,
      ),
    ),
  ],
  span: Span(
    start: 0,
    end: 359,
  ),
)
