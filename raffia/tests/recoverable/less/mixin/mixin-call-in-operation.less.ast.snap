---
source: raffia/tests/recoverable.rs
---
Stylesheet(
  type: "Stylesheet",
  statements: [
    LessConditionalQualifiedRule(
      type: "LessConditionalQualifiedRule",
      selector: SelectorList(
        type: "SelectorList",
        selectors: [
          ComplexSelector(
            type: "ComplexSelector",
            children: [
              CompoundSelector(
                type: "CompoundSelector",
                children: [
                  IdSelector(
                    type: "IdSelector",
                    name: Ident(
                      type: "Ident",
                      name: "a",
                      raw: "a",
                      span: Span(
                        start: 1,
                        end: 2,
                      ),
                    ),
                    span: Span(
                      start: 0,
                      end: 2,
                    ),
                  ),
                ],
                span: Span(
                  start: 0,
                  end: 2,
                ),
              ),
            ],
            span: Span(
              start: 0,
              end: 2,
            ),
          ),
        ],
        commaSpans: [],
        span: Span(
          start: 0,
          end: 2,
        ),
      ),
      guard: LessConditions(
        type: "LessConditions",
        conditions: [
          LessParenthesizedCondition(
            type: "LessParenthesizedCondition",
            condition: LessMixinCall(
              type: "LessMixinCall",
              callee: LessMixinCallee(
                type: "LessMixinCallee",
                children: [
                  LessMixinCalleeChild(
                    type: "LessMixinCalleeChild",
                    name: ClassSelector(
                      type: "ClassSelector",
                      name: Ident(
                        type: "Ident",
                        name: "b",
                        raw: "b",
                        span: Span(
                          start: 10,
                          end: 11,
                        ),
                      ),
                      span: Span(
                        start: 9,
                        end: 11,
                      ),
                    ),
                    combinator: None,
                    span: Span(
                      start: 9,
                      end: 11,
                    ),
                  ),
                ],
                span: Span(
                  start: 9,
                  end: 11,
                ),
              ),
              args: Some(LessMixinArguments(
                type: "LessMixinArguments",
                args: [],
                isCommaSeparated: true,
                separatorSpans: [],
                span: Span(
                  start: 11,
                  end: 13,
                ),
              )),
              important: None,
              span: Span(
                start: 9,
                end: 13,
              ),
            ),
            span: Span(
              start: 8,
              end: 14,
            ),
          ),
        ],
        whenSpan: Span(
          start: 3,
          end: 7,
        ),
        commaSpans: [],
        span: Span(
          start: 8,
          end: 14,
        ),
      ),
      block: SimpleBlock(
        type: "SimpleBlock",
        statements: [],
        span: Span(
          start: 15,
          end: 17,
        ),
      ),
      span: Span(
        start: 0,
        end: 17,
      ),
    ),
  ],
  span: Span(
    start: 0,
    end: 18,
  ),
)
